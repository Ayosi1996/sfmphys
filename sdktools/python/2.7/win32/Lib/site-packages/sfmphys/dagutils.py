import vs
import sfm
import sfmUtils

def TransformToPosQuat(transform):
	pos = vs.Vector()
	quat = vs.Quaternion()
	vs.MatrixPosition(transform, pos)
	vs.MatrixQuaternion(transform, quat)

	return pos, quat
#end

def TransformToPosEuler(transform):
	pos = vs.Vector()
	quat = vs.Quaternion()
	vs.MatrixPosition(transform, pos)
	vs.MatrixQuaternion(transform, quat)

	euler = vs.RadianEuler()
	vs.QuaternionAngles(quat, euler)

	return pos, euler
#end

def PosQuatToTransform(pos, rot):
	result = vs.matrix3x4_t()
	vs.QuaternionMatrix(rot, pos, result)
	return result
#end

def GetAbsTransformAtTime(dag, time):
	trans = GetTransformAtTime(dag, time)

	if (dag.GetType() == vs.CDmeGameModel_GetStaticTypeSymbol()):
		return trans
	else:
		partrans = GetAbsTransformAtTime(dag.GetParent(), time)

		result = vs.matrix3x4_t()
		vs.ConcatTransforms(partrans, trans, result)
		return result
	#end
#end

def GetRelativeTransformAtTime(parent, child, time):
	partrans = GetAbsTransformAtTime(parent, time)
	childtrans = GetAbsTransformAtTime(child, time)

	inv_partrans = vs.matrix3x4_t()
	vs.MatrixInvert(partrans, inv_partrans)

	result = vs.matrix3x4_t()
	vs.ConcatTransforms(inv_partrans, childtrans, result)

	return result
#end

def GetTransformAtTime(dag, time):
	pos = GetValueAtTime(dag.FindTransformControl().GetPositionChannel(), time)
	quat = GetValueAtTime(dag.FindTransformControl().GetOrientationChannel(), time)

	return PosQuatToTransform(pos, quat)
#end

def GetValueAtTime(channel, time):
	clipstart = sfm.GetCurrentShot().GetStartTime()
	start = channel.FindOwnerClipForChannel(sfm.GetCurrentShot()).GetStartTime()
	return channel.GetLog().GetValue((time - clipstart) - start)
#end

def SetAbsTransformAtTime(dag, time, transform):
	if (dag.GetType() == vs.CDmeGameModel_GetStaticTypeSymbol()):
		SetTransformAtTime(dag, time, transform)
	else:
		partrans = GetAbsTransformAtTime(dag.GetParent(), time)

		inv_partrans = vs.matrix3x4_t()
		vs.MatrixInvert(partrans, inv_partrans)

		result = vs.matrix3x4_t()
		vs.ConcatTransforms(inv_partrans, transform, result)

		SetTransformAtTime(dag, time, result)
	#end
#end

def SetRelativeTransformAtTime(parent, child, time, transform):
	partrans = GetAbsTransformAtTime(parent, time)

	result = vs.matrix3x4_t()
	vs.ConcatTransforms(partrans, transform)

	SetAbsTransformAtTime(child, time, result)
#end

def SetTransformAtTime(dag, time, transform):
	pos = vs.Vector()
	quat = vs.Quaternion()
	vs.MatrixPosition(transform, pos)
	vs.MatrixQuaternion(transform, quat)
	SetValueAtTime(dag.FindTransformControl().GetPositionChannel(), time, pos)
	SetValueAtTime(dag.FindTransformControl().GetOrientationChannel(), time, quat)
#end

def SetValueAtTime(channel, time, value):
	clipstart = sfm.GetCurrentShot().GetStartTime()
	start = channel.FindOwnerClipForChannel(sfm.GetCurrentShot()).GetStartTime()
	channel.GetLog().SetKey((time - clipstart) - start, value);
#end