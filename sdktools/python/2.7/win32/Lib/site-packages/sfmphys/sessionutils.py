import vs
import sfm
import sfmUtils

def FindElementByName(name):
	max = vs.g_pDataModel.GetElementsAllocatedSoFar()
	elementHandle = vs.g_pDataModel.FirstAllocatedElement()
	
	for i in range(max):
		element = vs.g_pDataModel.GetElementName(elementHandle)
		if (element == None):
			continue
		
		if (element.GetName() == name):
			return vs.g_pDataModel.GetElement(elementHandle)
		#end if
		elementHandle = vs.g_pDataModel.NextAllocatedElement(elementHandle)
	#end for
	
	return None
#end

def FindElementsOfType(type):
	max = vs.g_pDataModel.GetElementsAllocatedSoFar()
	elementHandle = vs.g_pDataModel.FirstAllocatedElement()
	
	ret = []
	
	for i in range(max):
		element = vs.g_pDataModel.GetElement(elementHandle)
		if (element == None):
			continue
		
		if (element.GetTypeString() == type):
			ret.append(element)
		#end if
		elementHandle = vs.g_pDataModel.NextAllocatedElement(elementHandle)
	#end for
	
	return ret
#end

def FindElementByTypeAndName(type, name):
	max = vs.g_pDataModel.GetElementsAllocatedSoFar()
	elementHandle = vs.g_pDataModel.FirstAllocatedElement()
	
	for i in range(max):
		element = vs.g_pDataModel.GetElement(elementHandle)
		if (element == None):
			continue
			
		if (element.GetName() == name and element.GetTypeString() == type):
			return element
		#end if
		elementHandle = vs.g_pDataModel.NextAllocatedElement(elementHandle)
	#end for
	
	return None
#end

def GetAnimationSets():
	return sfm.GetCurrentShot().animationSets
#end

def GetCurrentTimeSelection():
	#timeSelection has attributes "falloff_left", "hold_left", "falloff_right", "hold_right"
	timeSelection = FindElementByTypeAndName("DmeTimeSelection", "timeSelection")
	return timeSelection
#end

def GetFrameRate():
	renderSettings = FindElementByTypeAndName("DmElement", "renderSettings")
	return renderSettings.GetValue("frameRate")
#end